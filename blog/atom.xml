<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://boehs.com/boehs.com/blog</id>
    <title>boehs.com Blog</title>
    <updated>2021-10-28T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://boehs.com/boehs.com/blog"/>
    <subtitle>boehs.com Blog</subtitle>
    <icon>https://boehs.com/boehs.com/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Rails CDN and ActiveStorage]]></title>
        <id>https://boehs.com/boehs.com/blog/2021/10/28/rails-cdn-and-active-storage</id>
        <link href="https://boehs.com/boehs.com/blog/2021/10/28/rails-cdn-and-active-storage"/>
        <updated>2021-10-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[When serving assets and attachments from Rails and ActiveStorage, a CDN is a great way to reduce load on your web server and speed up content delivery to your users.]]></summary>
        <content type="html"><![CDATA[<p>When serving assets and attachments from Rails and ActiveStorage, a CDN is a great way to reduce load on your web server and speed up content delivery to your users.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="asset-cdn">Asset CDN<a href="#asset-cdn" class="hash-link" aria-label="Direct link to Asset CDN" title="Direct link to Asset CDN">​</a></h2><p>First, even if you're not using ActiveStorage, you'll want to set up a CDN to stand in front of your app. This will proxy requests for images, fonts, javascripts, and stylesheets that live in your app's repository.</p><p>The ideal setup here is to serve your assets from your app, set a high cache-expiration, and serve your assets through a CDN.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-your-asset-cdn">Setting up your Asset CDN<a href="#setting-up-your-asset-cdn" class="hash-link" aria-label="Direct link to Setting up your Asset CDN" title="Direct link to Setting up your Asset CDN">​</a></h3><p>For a CDN, I recommend Amazon CloudFront. You'll want to create a web distribution which points at the root of your app. Heroku <a href="https://help.heroku.com/8JTD2TJ6/how-should-i-configure-cloudfront-to-work-with-heroku" target="_blank" rel="noopener noreferrer">has a good guide</a> on that.</p><p>Once it's set up, set an environment variable<sup id="fnref-1-9e2216"><a href="#fn-1-9e2216" class="footnote-ref">1</a></sup> (e.g. <code>ASSET_HOST</code>) to the distribution domain name and configure your <code>asset_host</code>. Also, set a long expiration for your assets. In <code>config/environments/production.rb</code> <sup id="fnref-2-9e2216"><a href="#fn-2-9e2216" class="footnote-ref">2</a></sup> <sup id="fnref-3-9e2216"><a href="#fn-3-9e2216" class="footnote-ref">3</a></sup>:</p><div class="language-ruby codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ruby codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Tell our CDN and browser to cache assets for a year.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">public_file_server</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">headers </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token string-literal string" style="color:#e3116c">'Cache-Control'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token string-literal string" style="color:#e3116c">'public, max-age=31536000'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Serve images, stylesheets, and javascripts from an asset server.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">action_controller</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">asset_host </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">ENV</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string-literal string" style="color:#e3116c">'ASSET_HOST'</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Once you've configured the above, your production assets should serve from your CloudFront CDN.</p><p>For more information, on serving assets, caching, and cache invalidation, see the <a href="https://guides.rubyonrails.org/asset_pipeline.html#cdns-and-the-cache-control-header" target="_blank" rel="noopener noreferrer">Rails Guides</a>.</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="activestorage-attachments-served-through-a-cdn">ActiveStorage Attachments served through a CDN<a href="#activestorage-attachments-served-through-a-cdn" class="hash-link" aria-label="Direct link to ActiveStorage Attachments served through a CDN" title="Direct link to ActiveStorage Attachments served through a CDN">​</a></h2><p>When you serve attachments from a cloud storage service (I'm using S3), it will be coming from a different domain than your app. One solution to this would be to <a href="https://github.com/rails/rails/issues/31419#issuecomment-399118697" target="_blank" rel="noopener noreferrer" title="on Jun 21, 2018">stream the file contents through your app</a>.</p><p>I opted for creating a second CDN distribution that sits in front of the cloud storage provider that ActiveStorage serves for its 302 redirect <sup id="fnref-4-9e2216"><a href="#fn-4-9e2216" class="footnote-ref">4</a></sup>. This does require a little configuration. Thankfully nothing needs to be monkey patched.</p><ol><li><p>Create a second CloudFront web distribution that points to your S3 bucket and point your <code>ATTACHMENT_HOST</code> env variable at it (prepended with https://).</p></li><li><p>In <code>lib/active_storage/service/s3_directory_service.rb</code>, create the service in <a href="https://gist.github.com/ericboehs/59ff72b7beeb2724a0979247d0fe7541" target="_blank" rel="noopener noreferrer">this gist</a>.</p></li><li><p>In <code>config/environment/production.rb</code>, set ActiveStorage's <code>service_urls_expire_in</code> :</p><div class="language-ruby codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ruby codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Tell our CDN and browser to cache attachments for a year.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">active_storage</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">service_urls_expire_in </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1.</span><span class="token plain">year</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>In config/storage.yml, configure the service and default <code>cache_control</code> for uploaded attachments <a href="https://stackoverflow.com/a/58290203" target="_blank" rel="noopener noreferrer">by adding the upload key</a> <sup id="fnref-5-9e2216"><a href="#fn-5-9e2216" class="footnote-ref">5</a></sup>:</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">amazon</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">service</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> S3Directory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">upload</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">cache_control</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'public, max-age=31536000'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>When linking to the attachments, use the <code>rails_blob_url</code> helper like so: <sup id="fnref-6-9e2216"><a href="#fn-6-9e2216" class="footnote-ref">6</a></sup> </p><div class="language-ruby codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ruby codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">rails_blob_url user</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">avatar</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token symbol" style="color:#36acaa">host</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">ENV</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string-literal string" style="color:#e3116c">'ASSET_HOST'</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>(For variants, you'll need to call <code>rails_representation_url</code> instead.)</p></li></ol><p>Now your ActiveStorage attachments will serve through the two CDNs: the first request will hit Rails' Representations or Blob controller (through the Asset CDN) which will redirect to the service url for the attachment (through the Attachment CDN). If this attachment has been served to a previous user, no request will hit your web server as CloudFront will have it in its cache. If that user has requested the attachment before, it well be served from the browser's memory and no request will be made.<sup id="fnref-7-9e2216"><a href="#fn-7-9e2216" class="footnote-ref">7</a></sup></p><div class="footnotes"><hr><ol><li id="fn-1-9e2216">Prepend the host with https://.<a href="#fnref-1-9e2216" class="footnote-backref">↩</a></li><li id="fn-2-9e2216">If you're using Heroku Review Apps, you'll want to conditionally use <code>ENV['HEROKU_APP_NAME']</code> based on <code>ENV['HEROKU_PARENT_APP_NAME']</code>.<a href="#fnref-2-9e2216" class="footnote-backref">↩</a></li><li id="fn-3-9e2216">You may also want to <a href="https://guides.rubyonrails.org/action_mailer_basics.html#adding-images-in-action-mailer-views" target="_blank" rel="noopener noreferrer">set your mailers' asset host</a>.<a href="#fnref-3-9e2216" class="footnote-backref">↩</a></li><li id="fn-4-9e2216">See Rails' Representation and Variants controller to see how that works.<a href="#fnref-4-9e2216" class="footnote-backref">↩</a></li><li id="fn-5-9e2216">If you already have ActiveStorage attachments uploaded in production, you can make them public and add a cache-control header <a href="https://stackoverflow.com/a/30225271" target="_blank" rel="noopener noreferrer">by using aws cli tools</a>.<a href="#fnref-5-9e2216" class="footnote-backref">↩</a></li><li id="fn-6-9e2216">You may want to create a helper method to make this a little cleaner.<a href="#fnref-6-9e2216" class="footnote-backref">↩</a></li><li id="fn-7-9e2216">The same is true for your assets and the Asset CDN.<a href="#fnref-7-9e2216" class="footnote-backref">↩</a></li></ol></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MacBook Pro Battery Drain]]></title>
        <id>https://boehs.com/boehs.com/blog/2021/10/24/macbook-pro-battery-drain</id>
        <link href="https://boehs.com/boehs.com/blog/2021/10/24/macbook-pro-battery-drain"/>
        <updated>2021-10-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[My main computer is my iMac. It seemed like every time I opened my MacBook Pro, it would show this screen:]]></summary>
        <content type="html"><![CDATA[<p>My main computer is my iMac. It seemed like every time I opened my MacBook Pro, it would show this screen:</p><p><img loading="lazy" alt="MacBook Pro showing low battery full screen" src="/boehs.com/assets/images/macbook-low-battery-d48262613821dbd9fe27dcb9ed13a242.jpg" width="1680" height="840" class="img_ev3q"></p><p>So I researched a bit and fixed it. Here's what I did:</p><ul><li><strong>Turn off "PowerNap while on battery power"</strong>. This is the Energy preference pane.</li><li><strong>Turn off "Allow Bluetooth devices to wake this computer"</strong>. This is in the Bluetooth preference pane under Advanced.</li></ul><p>That's it.</p><hr><p>Now, when I open my MacBook the battery has barely moved from the previous day. For example, 3 days ago I closed my laptop with 64% battery. I opened it this morning with 50% battery. A 5%/day battery drain is excellent for a computer that's keeping its running memory actively powered. Previously I'd see what seemed to be 5%/hour (I didn't actually measure it but rarely did I open my laptop and it wasn't dead). </p><p>If you want to track your battery usage, check out <a href="https://bjango.com/mac/istatmenus/" target="_blank" rel="noopener noreferrer">iStat Menus</a>. It has a graph to show battery drain over time (past hour, day, week, month).</p><p><img loading="lazy" alt="iStat Menus Battery Screenshot" src="/boehs.com/assets/images/istat-battery-screenshot-6a6e4dc5b19dbbfaae0f79a183d8d827.png" width="1856" height="1212" class="img_ev3q"></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ping Tools in macOS]]></title>
        <id>https://boehs.com/boehs.com/blog/2021/10/23/ping-tools-in-macos</id>
        <link href="https://boehs.com/boehs.com/blog/2021/10/23/ping-tools-in-macos"/>
        <updated>2021-10-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I was looking for an outbound ping tool that I could run continuously on a secondary monitor or in the background so I could quickly troubleshoot internet outages or packet loss.]]></summary>
        <content type="html"><![CDATA[<p>I was looking for an outbound ping tool that I could run continuously on a secondary monitor or in the background so I could quickly troubleshoot internet outages or packet loss.</p><p>For example, when I'm in a video call, if the other person starts to have issues with audio/video, I can, with a glance, tell if it's me or not by looking for latency/packet loss amongst the hosts I'm pinging.</p><p><strong><a href="http://www.ermitacode.com/icmputil.html" target="_blank" rel="noopener noreferrer" title="ICMPUtil">ICMPUtil</a> is the best I've found.</strong> It's $6 <a href="https://apps.apple.com/us/app/icmputil/id866965011?mt=12" target="_blank" rel="noopener noreferrer" title="on the App Store">on the App Store</a>.</p><p><img loading="lazy" alt="Screenshot of ICMPUtil" src="/boehs.com/assets/images/icmputil-91463b0f6398166237b21a33e6527eae.png" width="622" height="229" class="img_ev3q"></p><p>I recommend setting it to use a <strong>1 second ping interval with a 64 byte payload</strong>. 0.1 second pings look cool but many servers including google.com won't respond to ICMP that quickly. The default payload of 32 bytes is half the default value for a typical ping command so results may differ slightly if you don't use 64 bytes.</p><p>Add several hosts so if there's an outage with your internet, you'll see all hosts aren't responding. If there's just an issue with say Google or AWS then multiple hosts could fail but it's not your internet.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-tools">Other Tools<a href="#other-tools" class="hash-link" aria-label="Direct link to Other Tools" title="Direct link to Other Tools">​</a></h2><p>Some other options:</p><ul><li><a href="https://formulae.brew.sh/formula/mtr" target="_blank" rel="noopener noreferrer" title="mtr">mtr</a> - This is a traceroute terminal app that continually pings each host in a traceroute</li><li><a href="https://sixcolors.com/post/2015/02/autoping-keeps-an-eye-on-my-network/" target="_blank" rel="noopener noreferrer" title="autoping">autoping</a> - GUI mac app I used to use; no longer available though</li></ul>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Instant Google Results in Alfred]]></title>
        <id>https://boehs.com/boehs.com/blog/2020/09/07/instant-google-results-in-alfred</id>
        <link href="https://boehs.com/boehs.com/blog/2020/09/07/instant-google-results-in-alfred"/>
        <updated>2020-09-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I've been searching for a solution to allow me to instantly search Google from anywhere on my Mac. My goal is to access the result I want as fast as possible.]]></summary>
        <content type="html"><![CDATA[<p>I've been searching for a solution to allow me to instantly search Google from anywhere on my Mac. My goal is to access the result I want as fast as possible.</p><p>My previous solution was to use the default fallback search in Alfred. I hit <code>Option-Space</code> typed my search and pressed <code>Enter</code>. This was pretty good. It would open Safari with my query's Google results. The page would take two seconds to load and then I'd have to figure out how to select the result I wanted.</p><p>Ideally, I'd just press 1, 2, 3, etc on my keyboard to launch the corresponding result. But the closest I could find was a vim-like browser plugin (such as <a href="https://github.com/televator-apps/vimari" target="_blank" rel="noopener noreferrer">Vimari</a>) which gives all links a letter combination to type to navigate to it. Or <a href="https://shortcatapp.com" target="_blank" rel="noopener noreferrer">Shortcat</a>, which I use for navigating all macOS UI.<sup id="fnref-1-a62834"><a href="#fn-1-a62834" class="footnote-ref">1</a></sup></p><p>This solution wasn't fast enough for me though. I wanted a more modal experience where I hop into an ephemeral search session.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="enter-googler">Enter googler<a href="#enter-googler" class="hash-link" aria-label="Direct link to Enter googler" title="Direct link to Enter googler">​</a></h2><p>In my search for instantly navigating Google results, I came across <a href="https://github.com/jarun/googler" target="_blank" rel="noopener noreferrer">googler</a> which displays google results on the command line. You can type a number followed by <code>Enter</code> and it opens your default browser to that result. Getting closer.</p><p>After looking for an existing solution and turning up empty, I decided to make my own via Alfred Workflows.</p><p>I really liked <code>googler</code> and essentially wanted to interface with it through Alfred. So I picked up my favorite programming language, and started writing. The end result is <a href="https://github.com/ericboehs/alfred-googler" target="_blank" rel="noopener noreferrer">Alfred googler</a>. Here's a demo:</p><p><img loading="lazy" src="https://github.com/ericboehs/alfred-googler/raw/master/demo.gif" alt="demo gif" class="img_ev3q"></p><p>Check out the <a href="https://github.com/ericboehs/alfred-googler#readme" target="_blank" rel="noopener noreferrer">README</a> for info on installation and features.</p><div class="footnotes"><hr><ol><li id="fn-1-a62834">There's an alternative to Shortcat called <a href="https://vimacapp.com/" target="_blank" rel="noopener noreferrer">Vimac</a> but I still prefer Shortcat even though it's not maintained.<a href="#fnref-1-a62834" class="footnote-backref">↩</a></li></ol></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Monitoring my Internet Connection with Speedtest-cli]]></title>
        <id>https://boehs.com/boehs.com/blog/2020/09/06/monitoring-my-internet-connection-with-speedtest-cli</id>
        <link href="https://boehs.com/boehs.com/blog/2020/09/06/monitoring-my-internet-connection-with-speedtest-cli"/>
        <updated>2020-09-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I wanted to log my internet's upload and download speeds over time. brew search speed turned up speedtest-cli which uses speedtest.net servers to measure what I was interested in.]]></summary>
        <content type="html"><![CDATA[<p>I wanted to log my internet's upload and download speeds over time. <code>brew search speed</code> turned up <code>speedtest-cli</code> which uses speedtest.net servers to measure what I was interested in.</p><p>Unfortunately it's a one time test and if you want it to repeat, you'll need to automate it. I chose a simple shell <code>while</code> loop to handle this for me<sup id="fnref-1-f22238"><a href="#fn-1-f22238" class="footnote-ref">1</a></sup>:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  speedtest-cli --json --server </span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable" style="color:#36acaa"></span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">    speedtest-cli --list </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa"></span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">    </span><span class="token variable function" style="color:#d73a49">grep</span><span class="token variable" style="color:#36acaa"> -E </span><span class="token variable string" style="color:#e3116c">"CenturyLink|Sprint|Enid|OneNet|Cox|Suddenlink"</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa"></span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">    </span><span class="token variable function" style="color:#d73a49">head</span><span class="token variable" style="color:#36acaa"> -20 </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa"></span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">    </span><span class="token variable function" style="color:#d73a49">cut</span><span class="token variable" style="color:#36acaa"> -f </span><span class="token variable number" style="color:#36acaa">1</span><span class="token variable" style="color:#36acaa"> -d '</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain">' </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sort</span><span class="token plain"> -R </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">head</span><span class="token plain"> -1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">tee</span><span class="token plain"> -a speedtest-log.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">sleep</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">600</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">clear</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">done</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This checks a random nearby server every 10 minutes.</p><p>The <code>$(...)</code> subshell is what finds a random server (<code>speedtest-cli</code> outputs in order of distance). The <code>grep</code> limits it to internet providers I've heard of<sup id="fnref-2-f22238"><a href="#fn-2-f22238" class="footnote-ref">2</a></sup>. <code>tee</code> outputs to stdout as well as a log file so I can see the results without having to <code>tail</code> the json log.</p><p>I run this in a tmux session dedicated to monitoring my internet (I run 2ping, mtr, and httping here as well).</p><p>The results are append to the log as one test run per line so it's a little terse to read. I may end up writing a Sinatra app to display the results in a more human readable format.</p><div class="footnotes"><hr><ol><li id="fn-1-f22238">I don't recommend running this on a laptop as you may forget about it when you tether to your phone's data plan.<a href="#fnref-1-f22238" class="footnote-backref">↩</a></li><li id="fn-2-f22238">Feel free to adjust this to your preference.<a href="#fnref-2-f22238" class="footnote-backref">↩</a></li></ol></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Configuring a Heroku Review App to use another apps database]]></title>
        <id>https://boehs.com/boehs.com/blog/2020/03/05/configuring-a-heroku-review-app-to-use-another-apps-database</id>
        <link href="https://boehs.com/boehs.com/blog/2020/03/05/configuring-a-heroku-review-app-to-use-another-apps-database"/>
        <updated>2020-03-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In certain scenarios, I've found it useful to use our production app's Read Replica as a source for manual testing. It's not something I'm reaching for often but there are definitely cases where our seed data just doesn't cut it.]]></summary>
        <content type="html"><![CDATA[<p>In certain scenarios, I've found it useful to use our production app's Read Replica as a source for manual testing. It's not something I'm reaching for often but there are definitely cases where our seed data just doesn't cut it.</p><p>Since it's a read replica, no writes can be made to it and I don't have to worry (too much) about harming production. You'll want to make sure any external user operations aren't configured to happen automatically (e.g. sending email, cropping avatars, etc).</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="destroy">Destroy<a href="#destroy" class="hash-link" aria-label="Direct link to Destroy" title="Direct link to Destroy">​</a></h2><p>In order to assign a different <code>DATABASE_URL</code> to a review app, you'll need to destroy the postgres attachment on your review app. I knock this out by chaining some commands together:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">heroku addons:destroy </span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable" style="color:#36acaa">heroku addons:info heroku-postgresql -a your_review_app </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable function" style="color:#d73a49">grep</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable string" style="color:#e3116c">'==='</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable function" style="color:#d73a49">awk</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable string" style="color:#e3116c">'{print $2}'</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain"> -a your_review_app</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The sub-command here is getting the name of the add-on (e.g. postgresql-concentric-04442) and passing it to <code>heroku addons:destroy</code>.<sup id="fnref-1-d990de"><a href="#fn-1-d990de" class="footnote-ref">1</a></sup></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="configure">Configure<a href="#configure" class="hash-link" aria-label="Direct link to Configure" title="Direct link to Configure">​</a></h2><p>Now that we've gotten rid of that pesky, old database, we can set the <code>DATABASE_URL</code> on our review app. I also have a banger of a command for this:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">heroku config:set </span><span class="token assign-left variable" style="color:#36acaa">DATABASE_URL</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$(</span><span class="token string variable" style="color:#36acaa">heroku config:get HEROKU_POSTGRESQL_PURPLE_URL -r production</span><span class="token string variable" style="color:#36acaa">)</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> -a your_review_app</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In order to know what to substitute in for <code>HEROKU_POSTGRESQL_PURPLE_URL</code> in your setup, run:<sup id="fnref-2-d990de"><a href="#fn-2-d990de" class="footnote-ref">2</a></sup></p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">heroku pg:info -r production </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> Followers </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Use your discretion to determine your read-replica.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="relish">Relish<a href="#relish" class="hash-link" aria-label="Direct link to Relish" title="Direct link to Relish">​</a></h2><p>That's it. In my case, my app was rebooted and it read the <code>DATABASE_URL</code> without a problem. If your app tries to do writes, it will most likely throw an exception.</p><div class="footnotes"><hr><ol><li id="fn-1-d990de">Of course, don't put your production app's name in this one. 😂😱<a href="#fnref-1-d990de" class="footnote-backref">↩</a></li><li id="fn-2-d990de">Assuming you're using a read replica from Heroku<a href="#fnref-2-d990de" class="footnote-backref">↩</a></li></ol></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Resolving Brakeman Errors]]></title>
        <id>https://boehs.com/boehs.com/blog/2020/03/03/resolving-brakeman-errors</id>
        <link href="https://boehs.com/boehs.com/blog/2020/03/03/resolving-brakeman-errors"/>
        <updated>2020-03-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[After running brakeman you'll get a report and, if there are new warnings, it will exit with a status code of "3". Typically, I only see two types of output from Brakeman. Either a large report where there are new warnings or a short report which is saying Brakeman is out of date.]]></summary>
        <content type="html"><![CDATA[<p>After running <code>brakeman</code> you'll get a report and, if there are new warnings, it will exit with a status code of "3". Typically, I only see two types of output from Brakeman. Either a large report where there are new warnings or a short report which is saying Brakeman is out of date.</p><p>I'll briefly explain resolving both.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="resolving-new-warnings-detected">Resolving New Warning(s) Detected<a href="#resolving-new-warnings-detected" class="hash-link" aria-label="Direct link to Resolving New Warning(s) Detected" title="Direct link to Resolving New Warning(s) Detected">​</a></h2><p>The long report.</p><p>Run <code>brakeman -I</code> to get an interactive console for ignoring warnings. It will analyze your code base and then prompt you for where to find the ignore file. I've always used the default location of <code>config/brakeman.ignore</code>, so I simply press <code>Enter</code> to accept the default.</p><p>Then I almost always choose option <code>2</code> to "Hide previously ignored warnings". This option is a bit confusing. It's the same as option 1 but doesn't show warnings you've already ignored.</p><p>At this point, brakeman will iterate over each new warning prompting you to ignore the warning. This is a critical point in your role here. <strong>You need to make sure the warning should be ignored or fixed.</strong> If this is a positive warning, you need to <code>Ctrl-C</code> right now and go fix the code rather than ignoring the vulnerability. If it is a false-positive, you can ignore it here via <code>i</code> or <code>n</code>. I recommend <code>n</code> because it prompts for a note as to why this warning is a false-positive.</p><p>After you have resolved all warnings, it will (optionally) prompt you to remove fingerprints (outdated warnings). You need to input <code>y</code> or <code>yes</code> here for it to actually remove the fingerprints.</p><p>Finally, you'll want to save changes via <code>1</code> and, due to amnesia or disorder, Brakeman will again ask you where the ignore file is. I again just press <code>Enter</code> because I use the default location. (I have no idea why the input and output would be in different locations.)</p><p>You can run <code>brakeman</code> again and it should report "No warnings found". You're all ready to check the ignore file into source control and push it up to your CI.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="brakemans-out-of-date">Brakeman's Out of Date<a href="#brakemans-out-of-date" class="hash-link" aria-label="Direct link to Brakeman's Out of Date" title="Direct link to Brakeman's Out of Date">​</a></h2><p>The short report.</p><p>This only appears if you're running <code>brakeman --enusre-latest</code> (which I highly recommend).</p><p>To fix, simply run <code>bundle update brakeman</code>. This will update your <code>Gemfile.lock</code> which is all you should need to change.</p><p>If you are locking brakeman in your <code>Gemfile</code> (which I don't recommend), you should check Brakeman's <a href="https://github.com/presidentbeef/brakeman/blob/master/CHANGES.md" target="_blank" rel="noopener noreferrer">CHANGES</a> to make sure the new changes don't break whatever you're guarding against with the version locking.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Audio Gear]]></title>
        <id>https://boehs.com/boehs.com/blog/2020/01/28/audio-gear</id>
        <link href="https://boehs.com/boehs.com/blog/2020/01/28/audio-gear"/>
        <updated>2020-01-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[If you would like to have great, clean sounding audio in your meetings, podcasts, or videos. Purchase the microphone and]]></summary>
        <content type="html"><![CDATA[<p>If you would like to have great, clean sounding audio in your meetings, podcasts, or videos. Purchase the microphone and
audio interface that I recommend and use below.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="microphone">Microphone<a href="#microphone" class="hash-link" aria-label="Direct link to Microphone" title="Direct link to Microphone">​</a></h2><p>I use the <a href="https://amazon.com/dp/B000BQ79W0" target="_blank" rel="noopener noreferrer">Audio-Technica AT875R</a> shotgun microphone.</p><p>I place it 3-5 inches from my mouth using a boom arm attached to my desk. Since I type on that desk, I use a shock
mount.</p><p>Since this is a shotgun mic, it works great from a distance. I can position the mic about 6-8 inches from my mouth
to get it out of a video head shot which I use for meetings (I have enough room for a lower third with this shot;
about a 35mm focal length). But, for best sound, place it only a fist-full away.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="audio-interface">Audio Interface<a href="#audio-interface" class="hash-link" aria-label="Direct link to Audio Interface" title="Direct link to Audio Interface">​</a></h2><p>Since most microphones in this category do not have USB, you will need an interface to connect it to your
computer.</p><p>I recommend the <a href="https://amazon.com/dp/B00QHURLCW" target="_blank" rel="noopener noreferrer">Behringer UMC204HD</a> audio interface. I have the 404HD which has four inputs
instead of two. I have yet to use more than two inputs though.</p><p>Many podcasters like the Focusrite Scarlett interfaces but these cannot be muted by apps like Shush (see below)
and therefore I cannot recommend them.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="boom-arm">Boom Arm<a href="#boom-arm" class="hash-link" aria-label="Direct link to Boom Arm" title="Direct link to Boom Arm">​</a></h2><p>The microphone I recommend doesn't come with a stand. In my setup, I have a <a href="https://amazon.com/dp/B001D7UYBO" target="_blank" rel="noopener noreferrer">Rode PSA1 Boom
arm</a>. It's fine but if it ever breaks I'll probably purchase a <a href="https://amazon.com/dp/B078MLBGRM" target="_blank" rel="noopener noreferrer">Blue
Compass</a> purely for asthetics. Neewer makes <a href="https://amazon.com/dp/B00DY1F2CS" target="_blank" rel="noopener noreferrer">a cheap boom arm</a>
but I haven't tried it.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="shock-mount">Shock Mount<a href="#shock-mount" class="hash-link" aria-label="Direct link to Shock Mount" title="Direct link to Shock Mount">​</a></h2><p>Since I'm typing/bumping the desk I sit at, I got a <a href="https://amazon.com/dp/B00KXQIU5S" target="_blank" rel="noopener noreferrer">shock mount</a> which works great with my
microphone.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="xlr-cable">XLR Cable<a href="#xlr-cable" class="hash-link" aria-label="Direct link to XLR Cable" title="Direct link to XLR Cable">​</a></h2><p>None of the aforementioned products come with an XLR cable. If you're using a boom arm you will probably need 6-15ft of
XLR cable. I went with <a href="https://amazon.com/dp/B0002GML68" target="_blank" rel="noopener noreferrer">a 10ft cable from Planet Waves</a>. I had a little cable to spare.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="shush---digital-cough-drop">Shush - Digital Cough Drop<a href="#shush---digital-cough-drop" class="hash-link" aria-label="Direct link to Shush - Digital Cough Drop" title="Direct link to Shush - Digital Cough Drop">​</a></h2><p>When you're in a meeting or apart of a live event, you'll eventually need to cough or sneeze or the dog starts barking
or something else will happen, and you will want to mute your microphone quickly. For this case, I highly recommend the
$5 app <a href="http://mizage.com/shush" target="_blank" rel="noopener noreferrer">Shush from Mizage</a>.</p><p>In Push-to-Silence mode, I have a single hot key that I can hold to mute myself. Great for using as a digital <a href="https://amazon.com/dp/B00WOK8IOO" target="_blank" rel="noopener noreferrer">cough drop</a>. Double-press my hot key and it switches modes. Now, in Push-to-Talk mode, I can hold my hot key to talk to my guests (great when I'm in a large group and I don't need to talk a lot). Double-press it again and I'm back to Push-to-Silence mode.</p><p>I do recommend turning off the sounds Shush makes which means you have to rely on the status bar icon to know if you're
muted.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="monitoring-headphones">Monitoring Headphones<a href="#monitoring-headphones" class="hash-link" aria-label="Direct link to Monitoring Headphones" title="Direct link to Monitoring Headphones">​</a></h2><p>You'll want some closed backed headphones if you are going to be recording audio for others to listen to. You'll want
closed backed headphones so that audio doesn't leak into your microphone. I've heard good things about the <a href="https://amazon.com/dp/B000AJIF4E" target="_blank" rel="noopener noreferrer">Sony
MDR7506</a>. I personally use the <a href="https://amazon.com/dp/B07WLN43K3" target="_blank" rel="noopener noreferrer">Shure SE215</a> as they are in-ear
monitors which aren't so obnoxious on camera.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="too-expensive-for-you">Too expensive for you?<a href="#too-expensive-for-you" class="hash-link" aria-label="Direct link to Too expensive for you?" title="Direct link to Too expensive for you?">​</a></h2><p>Another option to all of the above is a USB microphone and some wired earbuds. The <a href="https://www.amazon.com/dp/B07ZPBFVKK" target="_blank" rel="noopener noreferrer">Audio-Technica
ATR2100x-USB</a> is a hand-held mic that comes with a stand. It has a standard headphone jack for
audio monitoring and will work as an audio output so you can hear yourself and your computer's audio in your headphones. It also has an XLR port so if
you wanted to slowly upgraded into a boom arm, usb interface, and so on, you could do so without having to buy a new
microphone. I haven't used it personally.</p><p>(This could be a good mobile solution as well.)</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="find-yourself-saying-i-have-too-much-money-or-i-want-more-options">Find yourself saying "I have too much money" or "I want more options"?<a href="#find-yourself-saying-i-have-too-much-money-or-i-want-more-options" class="hash-link" aria-label="Direct link to Find yourself saying &quot;I have too much money&quot; or &quot;I want more options&quot;?" title="Direct link to Find yourself saying &quot;I have too much money&quot; or &quot;I want more options&quot;?">​</a></h2><p>Check out Marco Arment's <a href="https://marco.org/podcasting-microphones" target="_blank" rel="noopener noreferrer">Podcasting Microphones Mega-Review</a>. He uses a $250
microphone with a $880 USB Interface and $1300 headphones with a $850 headphone amp.</p><p>While he does have pricey tastes, don't let that steer you away from his mega-review. He reviews almost two dozens mics,
ranging from $10-900,
with multiple sound recordings from each. If you want to research this rather than take my opinion, look no further. And
if you do, check out <a href="https://www.youtube.com/channel/UCvOU-zTlankT-JjN3ZzvuKA" target="_blank" rel="noopener noreferrer">Podcastage's YouTube Channel</a>.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Adding a Custom Postgres Type in Rails 4.2]]></title>
        <id>https://boehs.com/boehs.com/blog/2015/09/17/adding-a-custom-postgres-type-in-rails-4-2.html</id>
        <link href="https://boehs.com/boehs.com/blog/2015/09/17/adding-a-custom-postgres-type-in-rails-4-2.html"/>
        <updated>2015-09-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In a Rails app at work, we are using a PostGIS data type of geometry and we were getting this warning in our logs:]]></summary>
        <content type="html"><![CDATA[<p>In a Rails app at work, we are using a PostGIS data type of <code>geometry</code> and we were getting this warning in our logs:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">unknown OID 16391: failed to recognize type of 'geo'. It will be treated as String.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This is because by default, Active Record doesn't support the OID 16391 for this data type. We can add our own in Rails 4.1 as <a href="http://www.innovationontherun.com/fixing-unknown-oid-geography-errors-with-postgis-and-rails-4-0/" target="_blank" rel="noopener noreferrer">recommended by Rob Di Marco</a>.</p><p>In Rails 4.2, the OID module got reworked a bit and that solution doesn't work anymore. Well Rob helps as again by <a href="http://www.innovationontherun.com/adding-a-custom-postgresql-type-with-rails-4-2/" target="_blank" rel="noopener noreferrer">recommending a new solution for Rails 4.2</a>. The site isn't loading for me so I pulled the code from Google Cache, cleaned it up a little and represent it to you here.</p><p>In <code>config/initializers/add_custom_oid_types_to_active_record.rb</code>:</p><div class="language-ruby codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ruby codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># ActiveRecrod will `warn` (to stdout) when first connecting to the adapter:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#  unknown OID 16391: failed to recognize type of 'geo'. It will be treated as...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Registering the `geometry` type (typically not supported by Active Record) will</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># prevent this warning but AR will continue to treat it the same. This cleans up</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># logs and test output.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ActiveRecord</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">ConnectionAdapters</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">PostgreSQLAdapter</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">class_eval </span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token method-definition function" style="color:#d73a49">initialize_type_map_with_postgres_oids</span><span class="token plain"> mapping</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    initialize_type_map_without_postgres_oids mapping</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    register_class_with_limit mapping</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-literal string" style="color:#e3116c">'geometry'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ActiveRecord</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">ConnectionAdapters</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">PostgreSQLAdapter</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token constant" style="color:#36acaa">OID</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token builtin">Integer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  alias_method_chain </span><span class="token symbol" style="color:#36acaa">:initialize_type_map</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token symbol" style="color:#36acaa">:postgres_oids</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Configuring Pow including SSL]]></title>
        <id>https://boehs.com/boehs.com/blog/2015/01/20/configuring-pow-including-ssl.html</id>
        <link href="https://boehs.com/boehs.com/blog/2015/01/20/configuring-pow-including-ssl.html"/>
        <updated>2015-01-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I used pow in the past and didn't like it. I've given it a second chance and it seems to be working out. I'd like to give Invoker a try though but I'll save that for another day.]]></summary>
        <content type="html"><![CDATA[<p>I used pow in the past and didn't like it. I've given it a second chance and it seems to be working out. I'd like to give <a href="http://invoker.codemancers.com" target="_blank" rel="noopener noreferrer">Invoker</a> a try though but I'll save that for another day.</p><p>Pow is a daemon that runs your rack (Rails) apps in the background when you request them at a special <code>example_app.dev</code> domain. You don't have to start your app manually anymore (e.g. <code>rails s</code>). If you don't use your app for 15 minutes it kills your app's process to free up memory (restarting it on the next request). It doesn't run workers (I recommend inline <a href="https://github.com/chanks/que" target="_blank" rel="noopener noreferrer">que</a> workers via ActiveJob) or other daemons such as those in your <code>Procfile</code>. It just looks for a <code>config.ru</code> and (presumably) does a <code>rackup</code> on it. It's very simple to set up and it's Mac OS X only.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="install-pow">Install Pow<a href="#install-pow" class="hash-link" aria-label="Direct link to Install Pow" title="Direct link to Install Pow">​</a></h2><p>Before running the install script, configure pow to use port <code>3300</code> rather than <code>80</code>; this makes port forwarding easier and avoids unnecessary sudoing. You may prefer to skip this step or choose another port besides <code>3300</code>.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'export POW_DST_PORT=3300'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"> ~/.powconfig</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Run the <a href="http://pow.cx" target="_blank" rel="noopener noreferrer">pow</a> install script and configure pow to serve your app</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> get.pow.cx </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sh</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">cd</span><span class="token plain"> ~/.pow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">ln</span><span class="token plain"> -s ~/Code/example_co/example_app </span><span class="token comment" style="color:#999988;font-style:italic"># Or where ever your repo is</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Ensure your application is running:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">open</span><span class="token plain"> http://example_app.dev:3300</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="configure-ssl-with-tunnelss">Configure SSL with tunnelss<a href="#configure-ssl-with-tunnelss" class="hash-link" aria-label="Direct link to Configure SSL with tunnelss" title="Direct link to Configure SSL with tunnelss">​</a></h2><p>Install <a href="https://github.com/rchampourlier/tunnelss" target="_blank" rel="noopener noreferrer">tunnelss</a> on your system:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">gem </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> tunnelss</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Start tunnelss (I recommend 4430 as it does not require <code>sudo</code>):</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tunnelss </span><span class="token number" style="color:#36acaa">4430</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3300</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># Change port 3300 if you changed DST_PORT (80 is default)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Open the SSL URL to the app:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">open</span><span class="token plain"> https://example_app.dev:4430</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Trust the "unverified" self-signed certificate when prompted (should require admin password). <a href="https://cloud.githubusercontent.com/assets/28198/5825515/9d33e926-a0b1-11e4-8fa2-8fb5157b2e86.png" target="_blank" rel="noopener noreferrer">Screenshot for Safari</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="adding-the-ssl-certificate-to-ios">Adding the SSL certificate to iOS<a href="#adding-the-ssl-certificate-to-ios" class="hash-link" aria-label="Direct link to Adding the SSL certificate to iOS" title="Direct link to Adding the SSL certificate to iOS">​</a></h3><ul><li>In your shell, run <code>open ~/.tunnelss</code>.</li><li>Send <code>cert.pem</code> to yourself (email/iMessage).</li><li>Open the attachment on your iOS device and install the certificate (should require your pass code and warn you about it not be a verified certificate).</li><li>To access your application, use <a href="http://xip.io" target="_blank" rel="noopener noreferrer">xip.io</a>. On your mac run <code>ipconfig getifaddr en0</code> to get your local IP to use in the xip.io URL (e.g. https://example<!-- -->_<!-- -->app.10.0.1.4.xip.io:4430).</li></ul><p>Note: If you're testing remotely you will need an SSH or VPN tunnel.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="logs-restarting-pry-and-misc">Logs, restarting, pry and misc<a href="#logs-restarting-pry-and-misc" class="hash-link" aria-label="Direct link to Logs, restarting, pry and misc" title="Direct link to Logs, restarting, pry and misc">​</a></h2><p>Logs can be viewed in <code>log/development.log</code>. A useful alias for this is:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">alias</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">devlogs</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'tail -f ~/Code/*/*/log/development.log'</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># May need to change path</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Restart the application using:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">touch</span><span class="token plain"> tmp/restart.txt </span><span class="token comment" style="color:#999988;font-style:italic"># Will restart on next page load</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As usual, Rails handles much of the code reloading for you so you won't have to do this with every request. Just the typical reasons you'd need to restart the server for (modifying initializers, adding gems, modifying load paths, etc).</p><p>Since <a href="http://pryrepl.org" target="_blank" rel="noopener noreferrer">pry</a> isn't connected to a tty, you won't be able to start a debugger from your code the normal way (<code>binding.pry</code>). <a href="https://github.com/Mon-Ouie/pry-remote" target="_blank" rel="noopener noreferrer">pry-remote</a> has our back. Use <code>binding.remote_pry</code> in your code and then run <code>pry-remote</code>. This will attach your terminal to the pry debugging session.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">binding.remote_pry </span><span class="token comment" style="color:#999988;font-style:italic"># In your code</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pry-remote </span><span class="token comment" style="color:#999988;font-style:italic"># In your shell</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For memory efficiency, pow will shut down applications that are not used for some time (default is 15 minutes). Your application will take a few extra seconds to load the first time you come back to it.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Parsing null terminated key/value ASCII strings in Ruby]]></title>
        <id>https://boehs.com/boehs.com/blog/2014/10/31/parsing-null-terminated-key-value-ascii-strings-in-ruby.html</id>
        <link href="https://boehs.com/boehs.com/blog/2014/10/31/parsing-null-terminated-key-value-ascii-strings-in-ruby.html"/>
        <updated>2014-10-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I've recently been messing with a lot of hex thanks to my current client. I ran across a key/value hex string where each key/value pair was NULL terminated (pairs separated from other pairs with a NULL character) and each key was seperated from its value by a colon. Here's the hex string:]]></summary>
        <content type="html"><![CDATA[<p>I've recently been messing with a lot of hex thanks to my current client. I ran across a key/value hex string where each key/value pair was NULL terminated (pairs separated from other pairs with a NULL character) and each key was seperated from its value by a colon. Here's the hex string:</p><div class="language-ruby codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ruby codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"> hexstr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string-literal string" style="color:#e3116c">"56494e3a3147314a433534343452373235323336370050524f544f3a3500504152414d533a302c312c322c342c372c392c31312c31342c323000494e44435452533a302830303030303030303030303131292c3128303131303031303131313129"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>First I wanted to convert this to ASCII, Ruby makes this fairly simple:</p><div class="language-ruby codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ruby codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"> str </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">hexstr</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pack </span><span class="token string-literal string" style="color:#e3116c">'H*'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token string-literal string" style="color:#e3116c">"VIN:1G1JC5444R7252367\x00PROTO:5\x00PARAMS:0,1,2,4,7,9,11,14,20\x00INDCTRS:0(0000000000011),1(01100101111)"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now we have an ascii string with null terminators. Ruby has escape sequences like <code>\n</code> for newline and <code>\t</code> for tab. It also has hex escape sequences, for example the letter <code>a</code> is <code>\x61</code> as <code>61</code> is its hex value. A null character is the hex value <code>00</code> so the escape sequence is <code>\x00</code>. Now to break the string apart we use split:</p><div class="language-ruby codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ruby codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"> kv_pairs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> str</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">split </span><span class="token string-literal string" style="color:#e3116c">"\x00"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string-literal string" style="color:#e3116c">"VIN:1G1JC5444R7252367"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-literal string" style="color:#e3116c">"PROTO:5"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-literal string" style="color:#e3116c">"PARAMS:0,1,2,4,7,9,11,14,20"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-literal string" style="color:#e3116c">"INDCTRS:0(0000000000011),1(01100101111)"</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Finally, you can split these pairs into further pairs by mapping over them with split and then use Ruby's <code>Hash[]</code> syntax to create a hash from the array of arrays:</p><div class="language-ruby codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ruby codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"> kv_pairs_array </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> kv_pairs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">map </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">key_vals</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> key_vals</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">split </span><span class="token string-literal string" style="color:#e3116c">':'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string-literal string" style="color:#e3116c">"VIN"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-literal string" style="color:#e3116c">"1G1JC5444R7252367"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string-literal string" style="color:#e3116c">"PROTO"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-literal string" style="color:#e3116c">"5"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string-literal string" style="color:#e3116c">"PARAMS"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-literal string" style="color:#e3116c">"0,1,2,4,7,9,11,14,20"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string-literal string" style="color:#e3116c">"INDCTRS"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-literal string" style="color:#e3116c">"0(0000000000011),1(01100101111)"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">obdii_info </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">Hash</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">kv_pairs_array</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-literal string" style="color:#e3116c">"VIN"</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token string-literal string" style="color:#e3116c">"1G1JC5444R7252367"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-literal string" style="color:#e3116c">"PROTO"</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token string-literal string" style="color:#e3116c">"5"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-literal string" style="color:#e3116c">"PARAMS"</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token string-literal string" style="color:#e3116c">"0,1,2,4,7,9,11,14,20"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-literal string" style="color:#e3116c">"INDCTRS"</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token string-literal string" style="color:#e3116c">"0(0000000000011),1(01100101111)"</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If you're like me and don't like upcased strings for keys, you can symbolize the keys (thanks active support) with this oneliner (I added the downcase call to the mix):</p><div class="language-ruby codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ruby codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"> obdii_info </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">Hash</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">obdii_info</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">map </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">k</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> k</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">downcase</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to_sym</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token symbol" style="color:#36acaa">:vin</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token string-literal string" style="color:#e3116c">"1G1JC5444R7252367"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token symbol" style="color:#36acaa">:proto</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token string-literal string" style="color:#e3116c">"5"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token symbol" style="color:#36acaa">:params</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token string-literal string" style="color:#e3116c">"0,1,2,4,7,9,11,14,20"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token symbol" style="color:#36acaa">:indctrs</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token string-literal string" style="color:#e3116c">"0(0000000000011),1(01100101111)"</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Looking nice! I've made these into methods for a util class I include. Eventually I'd like to make a special hex string class to handle this better, but for my current use case this works well.</p><p>Here are some methods you can throw in your own class:</p><div class="language-ruby codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ruby codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token method-definition function" style="color:#d73a49">hex_to_ascii</span><span class="token plain"> hex_string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">hex_string</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">delete </span><span class="token string-literal string" style="color:#e3116c">' '</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pack </span><span class="token string-literal string" style="color:#e3116c">'H*'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token method-definition function" style="color:#d73a49">hashify_null_term_str</span><span class="token plain"> str</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token builtin">Hash</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">str</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">split</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal string" style="color:#e3116c">"\x00"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">map </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">key_vals</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> key_vals</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">split </span><span class="token string-literal string" style="color:#e3116c">':'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token method-definition function" style="color:#d73a49">symbolize_keys</span><span class="token plain"> hash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token builtin">Hash</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">hash</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">map </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">k</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> k</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">downcase</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to_sym</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Example usage:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">symbolize_keys hashify_null_term_str hex_to_ascii </span><span class="token string-literal string" style="color:#e3116c">"56 49 4e 3a 00 50 52 4f 54 4f 3a 30 00 50 41 52 41 4d 53 3a"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># =&gt; { vin: nil, proto: "0", params: nil }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Happy Hacking.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Test if memcache is running and accessible]]></title>
        <id>https://boehs.com/boehs.com/blog/2014/02/03/test-if-memcache-is-running-and-accessible.html</id>
        <link href="https://boehs.com/boehs.com/blog/2014/02/03/test-if-memcache-is-running-and-accessible.html"/>
        <updated>2014-02-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I've been writing a Rails template for our future projects at Brightbit and I've been testing everything, including our application's environment. I've wrote a special rake task to test our different environments (development, test, staging, production, etc). This helps us ensure each environment is configured correctly. Ideally it would let the person running the tests know what is wrong with their environment and how to resolve it.]]></summary>
        <content type="html"><![CDATA[<p>I've been writing a Rails template for our future projects at <a href="http://brightbit.com" target="_blank" rel="noopener noreferrer">Brightbit</a> and I've been testing everything, including our application's environment. I've wrote a special rake task to test our different environments (development, test, staging, production, etc). This helps us ensure each environment is configured correctly. Ideally it would let the person running the tests know what is wrong with their environment and how to resolve it.</p><p>One of the environment details I wanted to test was that memcache was setup and running correctly. I could of course test for the memcached binary or check if it was running, but since we are running these tests in the context of a Rails app, why not just ask Rails if it can connect to the memcache server?</p><p>There's a multitude of ways to test for this. We don't have memcache setup in our test environment's config file, so I'll have to ask Rails to lookup a memcache store.  Also, I wanted to have something that would give a true/false rather than raise an exception (such as <code>Rails.cache.read 'some-made-up-key'</code>). After poking around a bit, I found that <code>Rails.cache.stats</code> would always return something if memcache was up but have nil values in its result hash if it was down.</p><p>So, if you just want to check in your console, you can run:</p><div class="language-ruby codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ruby codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Rails</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stats</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">values</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">include</span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">nil</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>But since we're writing a test which doesn't have memcache configured, we'll need to ask <code>ActiveSupport</code> to lookup a mem cache store:</p><div class="language-ruby codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ruby codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ActiveSupport</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">Cache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lookup_store</span><span class="token punctuation" style="color:#393A34">(</span><span class="token symbol" style="color:#36acaa">:mem_cache_store</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stats</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">values</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">include</span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">nil</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>So there ya go: quick and simple.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sharing a team Heroku account]]></title>
        <id>https://boehs.com/boehs.com/blog/2013/03/22/sharing-a-team-heroku-account.html</id>
        <link href="https://boehs.com/boehs.com/blog/2013/03/22/sharing-a-team-heroku-account.html"/>
        <updated>2013-03-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Share a Heroku account for a single place to add/remove team members for all shared apps. Permission allocation/revocation made simple! How? Add a new key for each team member to the shared account; access app repos using the heroku-accounts plugin]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>TL;DR</div><div class="admonitionContent_S0QG"><p>Share a Heroku account for a single place to add/remove team members for all shared apps. Permission allocation/revocation made simple! How? Add a new key for each team member to the shared account; access app repos using the heroku-accounts plugin</p></div></div><p>Currently at Brightbit there's 4-5 team members to add to each Heroku app. And with some projects having two, three or more apps (staging, production, splash, etc) it gets a bit cumbersome adding all of us and it will only get worse with more team mates.</p><p>What makes this problem worse is we don't re-bill hosting; we let our clients create an account and then they add us as collaborators. Some clients like this control, some just have us do it for them. Whatever the case, adding a single email for each app is much nicer.</p><p>To add to the convenience, if we want to add a team member to every Brightbit project we simply add their key to the team account. And if a team member leaves, we change the password and remove their key: instant permission revocation on every project.</p><p>So how do we achieve this? Open your favorite terminal and follow along.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="create-a-work-account-with-a-new-key">Create a work account with a new key<a href="#create-a-work-account-with-a-new-key" class="hash-link" aria-label="Direct link to Create a work account with a new key" title="Direct link to Create a work account with a new key">​</a></h3><p>You can only link an SSH key to one Heroku account at a time (how else would it know what account you were pushing from?), so you'll need to create a new key for your work account.</p><ol><li><p>Install the <a href="http://github.com/ddollar/heroku-accounts" target="_blank" rel="noopener noreferrer">Heroku accounts</a> plugin by David Dollar:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">heroku plugins:install git://github.com/ddollar/heroku-accounts.git</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Add a work account and login using the shared team email/password (don't add anything to your ssh config yet -- we'll get to that):</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">heroku accounts:add work</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Generate a dedicated ssh key for your work account (this is your personal key -- don't share this with your team):</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ssh-keygen -f ~/.ssh/id_rsa_heroku_work</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Add your key to the team Heroku account:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">heroku keys:add ~/.ssh/id_rsa_heroku_work.pub --account work</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Add the key to a <code>heroku.work</code> host (so you can push/pull with git):</p></li></ol><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'EOF'</span><span class="token string bash punctuation" style="color:#393A34"> </span><span class="token string bash punctuation operator" style="color:#393A34">&gt;&gt;</span><span class="token string bash punctuation" style="color:#393A34"> ~/.ssh/config</span><span class="token string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">Host heroku.work</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  HostName heroku.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  IdentityFile ~/.ssh/id_rsa_heroku_work</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  IdentitiesOnly yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">EOF</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="change-team-heroku-repositories">Change team heroku repositories<a href="#change-team-heroku-repositories" class="hash-link" aria-label="Direct link to Change team heroku repositories" title="Direct link to Change team heroku repositories">​</a></h2><p>Now to use the account you'll need to replace the <code>heroku.com</code> hostname with <code>heroku.work</code>. You can do this by removing and re-adding the remote or you can edit your current .git/config.</p><ol><li><p>Here's a 3 liner to modify your current .git/config that should work on any system (it would be a 1 liner if BSD and GNU sed agreed on inline replacement). You'll need to run it on the root of each repository:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token assign-left variable" style="color:#36acaa">TMP_FILE</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable" style="color:#36acaa">mktemp /tmp/config.XXXXXXXXXX</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sed</span><span class="token plain"> -e </span><span class="token string" style="color:#e3116c">"s/heroku.com/heroku.work/"</span><span class="token plain"> .git/config </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$TMP_FILE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">mv</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$TMP_FILE</span><span class="token plain"> .git/config</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Verify it worked (you'll get a public key denied if it didn't):</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">git</span><span class="token plain"> remote update</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>You also may want to set your team repo's default Heroku account (you can use --global for a system-wide change):</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">git</span><span class="token plain"> config heroku.account work</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="caveats">Caveats<a href="#caveats" class="hash-link" aria-label="Direct link to Caveats" title="Direct link to Caveats">​</a></h2><ul><li>You won't know who deployed what when you run a <code>heroku releases</code>.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="thats-all-folks">That's all, folks<a href="#thats-all-folks" class="hash-link" aria-label="Direct link to That's all, folks" title="Direct link to That's all, folks">​</a></h2><p>Mention me on twitter (<a href="http://twitter.com/ericboehs" target="_blank" rel="noopener noreferrer">@ericboehs</a>) if you run into any problems.</p><p>Happy coding!</p>]]></content>
    </entry>
</feed>